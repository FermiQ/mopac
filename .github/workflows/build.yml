name: Build multi-platform executables

on:
  push:
    branches:    
      - master

jobs:
  linux-build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Clone glibc compatibility library
        uses: actions/checkout@v2
        with:
          repository: wheybags/glibc_version_header
          path: glibc

      - name: Install static MKL (BLAS & LAPACK) with Anaconda
        run: conda install -c intel mkl-static

      - name: Configure & build mopac_math with CMake & GNU compilers
        run: |
          cmake -S math -B build_math \
            -DCMAKE_C_COMPILER=gcc \
            -DCMAKE_C_FLAGS="-include $GITHUB_WORKSPACE/glibc/version_headers/x64/force_link_glibc_2.17.h" \
            -DCMAKE_LIBRARY_PATH="$CONDA/lib"
          cmake --build build_math --config Release

      - name: Configure & build mopac_core with CMake & GNU compilers
        run: |
          cmake -B build \
            -DCMAKE_Fortran_COMPILER=gfortran \
            -DCMAKE_C_COMPILER=gcc \
            -DCMAKE_C_FLAGS="-include $GITHUB_WORKSPACE/glibc/version_headers/x64/force_link_glibc_2.17.h" \
            -DCMAKE_LIBRARY_PATH="$GITHUB_WORKSPACE/build_math"
          cmake --build build --config Release

      - name: Zip executable & shared libraries (including system libraries)
        run: |
          zip -j mopac.zip build/mopac
          zip -j mopac.zip build/param
          zip -j mopac.zip build/libmopac_core.so*
          zip -j mopac.zip build_math/libmopac_math.so*
          zip -j mopac.zip $CONDA/lib/libiomp5.so*
          ls /usr/lib/gcc/x86_64-linux-gnu/9
          zip -j mopac.zip /usr/local/lib/gcc/x86_64-linux-gnu/9/libgfortran.so*
          zip -j mopac.zip /usr/local/lib/gcc/x86_64-linux-gnu/9/libgcc_s.so*
          zip -j mopac.zip /usr/local/lib/gcc/x86_64-linux-gnu/9/libquadmath.so*

      - name: Save executable as an artifact
        uses: actions/upload-artifact@v2
        with:
          name: linux
          path: mopac.zip

  mac-build:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install static MKL (BLAS & LAPACK) with Anaconda
        run: |
          sudo chown -R runner:staff $CONDA
          conda install -c intel mkl-static

      - name: Configure & build mopac_math with CMake & GNU compilers
        run: |
          cmake -S math -B build_math \
            -DCMAKE_OSX_DEPLOYMENT_TARGET=10.8 \
            -DCMAKE_C_COMPILER=gcc-11 \
            -DCMAKE_LIBRARY_PATH="$CONDA/lib"
          cmake --build build_math --config Release

      - name: Configure & build mopac_core with CMake & GNU compilers
        run: |
          cmake -B build \
            -DCMAKE_OSX_DEPLOYMENT_TARGET=10.8 \
            -DCMAKE_Fortran_COMPILER=gfortran-11 \
            -DCMAKE_C_COMPILER=gcc-11 \
            -DCMAKE_LIBRARY_PATH="$GITHUB_WORKSPACE/build_math"
          cmake --build build --config Release

      - name: Zip executable & shared libraries (including system libraries)
        run: |
          zip -j mopac.zip build/mopac
          zip -j mopac.zip build/param
          zip -j mopac.zip build/libmopac_core*.dylib
          zip -j mopac.zip build_math/libmopac_math*.dylib
          zip -j mopac.zip $CONDA/lib/libiomp5.dylib
          zip -j mopac.zip /usr/local/lib/gcc/11/libgfortran*.dylib
          zip -j mopac.zip /usr/local/lib/gcc/11/libgcc_s*.dylib
          zip -j mopac.zip /usr/local/lib/gcc/11/libquadmath*.dylib

      - name: Save executable as an artifact
        uses: actions/upload-artifact@v2
        with:
          name: mac
          path: mopac.zip

  windows-build:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}

    steps:
      - uses: msys2/setup-msys2@v2
        with:
          install: >-
            git
            make
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-gcc-fortran

      - uses: actions/checkout@v2

      - name: Install static MKL (BLAS & LAPACK) with Anaconda
        shell: bash
        run: $CONDA/Scripts/conda.exe install -c intel mkl-static

      - name: Configure & build mopac_math with CMake & Microsoft compiler
        shell: bash
        run: |
          cmake -S math -B build_math \
            -G "Visual Studio 16 2019" \
            -DCMAKE_LIBRARY_PATH="$CONDA/Library/lib;$CONDA/Library/bin"
          cmake --build build_math --config Release

      - name: Configure & build mopac_core with CMake & GNU compilers
        run: |
          cmake -B build \
            -G "MSYS Makefiles" \
            -DCMAKE_VERBOSE_MAKEFILE=ON \
            -DCMAKE_Fortran_COMPILER=gfortran \
            -DCMAKE_C_COMPILER=gcc \
            -DCMAKE_LIBRARY_PATH="$GITHUB_WORKSPACE/build_math"
          cmake --build build --config Release

      - name: Zip executable & shared libraries (including system libraries)
        run: |
          zip -j mopac.zip build/mopac
          zip -j mopac.zip build/param
          zip -j mopac.zip build/mopac_core*.dll
          zip -j mopac.zip build_math/mopac_math*.dll
          zip -j mopac.zip $CONDA/lib/libiomp5md.dll

      - name: Save executable as an artifact
        uses: actions/upload-artifact@v2
        with:
          name: windows
          path: mopac.zip

  continuous-deployment:
    runs-on: ubuntu-latest
    needs:
      - linux-build
      - mac-build
      - windows-build

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v2

      - name: Install GitHub Release
        run: |
          go get github.com/github-release/github-release
          echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

      - name: Move/Create continuous tag
        run: |
          git tag --force continuous ${{ github.sha }}
          git push --tags --force

      - name: Assign GitHub user info for GitHub Release
        run: |
          echo "GITHUB_USER=$( echo ${{ github.repository }} | cut -d/ -f1 )" >> $GITHUB_ENV
          echo "GITHUB_REPO=$( echo ${{ github.repository }} | cut -d/ -f2 )" >> $GITHUB_ENV

      - name: Setup continuous release
        run: |
          DESCRIPTION="Triggered on $(date -u '+%Y/%m/%d, %H:%M') UTC by commit ${{ github.sha }} (@${{ github.actor }})

          This is an automated build of the latest source in the master branch.
          It is not an official release, and it is not intended for production work.

          Log: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          github-release edit \
            --tag continuous \
            --name "Continuous Build" \
            --description "$DESCRIPTION" \
            --pre-release

      - name: Download all artifacts
        uses: actions/download-artifact@v2
        with:
          path: ${{ github.workspace }}

      - name: Add executables to the continuous release
        run: |
          github-release upload \
            --tag continuous \
            --replace \
            --name mopac-linux-continuous.zip \
            --file linux/mopac.zip
          github-release upload \
            --tag continuous \
            --replace \
            --name mopac-mac-continuous.zip \
            --file mac/mopac.zip
          github-release upload \
            --tag continuous \
            --replace \
            --name mopac-windows-continuous.zip \
            --file windows/mopac.zip
